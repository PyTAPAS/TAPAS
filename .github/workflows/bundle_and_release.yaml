name: Build & Release Bundled App (Windows Only)

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  prep:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install toml
        run: python -m pip install toml

      - name: Read version from pyproject.toml
        id: read-version
        run: |
          version=$(python -c "import toml; print(toml.load(open('pyproject.toml', encoding='utf-8'))['project']['version'])")
          echo "version=$version" >> $GITHUB_OUTPUT

  build-windows:
    name: Build on Windows
    needs: prep
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install bundle deps
        run: |
          python -m pip install --upgrade pip
          pip install .[bundle]

      - name: PyInstaller build
        env:
          VERSION: ${{ needs.prep.outputs.version }}
        run: python build/pyinstaller.py

      - name: Zip the entire dist folder
        shell: powershell
        run: |
          Compress-Archive `
            -Path "dist\tapas_${{ needs.prep.outputs.version }}\*" `
            -DestinationPath "dist\tapas_${{ needs.prep.outputs.version }}-windows.zip"

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: tapas-windows-${{ needs.prep.outputs.version }}
          path: dist/tapas_${{ needs.prep.outputs.version }}-windows.zip

  release:
    name: Create GitHub Release & Attach ZIP
    needs: [prep, build-windows]
    runs-on: ubuntu-latest
  
    steps:
      - name: Download ZIP artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: tapas-windows-${{ needs.prep.outputs.version }}
          path: release-artifact
  
      - name: Create or update GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prep.outputs.version }}
          name: v${{ needs.prep.outputs.version }}
          draft: false
          prerelease: false
          files: release-artifact/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
