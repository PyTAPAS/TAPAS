name: Build & Release Bundled App (Windows Only)

on:
  push:
    branches: [main]
    paths:
      - "pyproject.toml"

permissions:
  contents: write
  id-token: write

jobs:
  prep:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Read version from pyproject.toml
        id: read-version
        run: |
          VERSION=$(python - <<'EOF'
import toml
py = toml.loads(open('pyproject.toml','r', encoding='utf-8').read())
print(py['project']['version'])
EOF
)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-windows:
    name: Build on Windows
    needs: prep
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install bundle deps
        run: |
          python -m pip install --upgrade pip
          pip install .[bundle]

      - name: PyInstaller build
        env:
          VERSION: ${{ needs.prep.outputs.version }}
        run: |
          python build/pyinstaller.py

      - name: Upload Windows EXE
        uses: actions/upload-artifact@v3
        with:
          name: tapas-windows-v${{ needs.prep.outputs.version }}
          path: dist/tapas_${{ needs.prep.outputs.version }}.exe

  release:
    name: Create or Update Release (Windows Only)
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          path: win-artifact

      - name: Create or update GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prep.outputs.version }}
          name: v${{ needs.prep.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows EXE to Release
        uses: softprops/action-gh-release@v1
        with:
          files: win-artifact/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
