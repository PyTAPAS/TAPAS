name: Build & Release Bundled App

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  prep:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Read version from pyproject.toml
        id: read-version
        run: |
          version=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          echo "version=$version" >> $GITHUB_OUTPUT


  build:
    name: Build & Package on ${{ matrix.name }}
    needs: prep
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: windows
            os: windows-latest
            
          - name: linux
            os: ubuntu-latest
            
          # Apple-Silicon build  (arm64 wheel → arm64 bundle)
          - name: mac-arm
            os: macos-14        # M-series runner
   
          # Intel-Mac build     (x86 wheel → x86_64 bundle)
          - name: mac-intel
            os: macos-13        # Intel runner
        
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Bundle Deps
        run: |
          python -m pip install --upgrade pip
          pip install .[bundle]

      - name: PyInstaller build
        env:
          VERSION: ${{ needs.prep.outputs.version }}
        run: python build/pyinstaller.py

      - name: Package dist folder (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Compress-Archive -Path "dist\tapas_${{ needs.prep.outputs.version }}\*" `
            -DestinationPath "dist/tapas_${{ needs.prep.outputs.version }}-windows.zip"

      - name: Package dist folder (Linux)
        if: runner.os == 'Linux'
        run: |
          tar czf dist/tapas_${{ needs.prep.outputs.version }}-linux.tar.gz \
            -C dist tapas_${{ needs.prep.outputs.version }}
            
      - name: Package dist folder (macOS)
        if: runner.os == 'macOS'
        run: |
          ARCH=$(uname -m)   # arm64 or x86_64
          tar czf "dist/tapas_${{ needs.prep.outputs.version }}-macos-${ARCH}.tar.gz" \
              -C dist "tapas_${{ needs.prep.outputs.version }}.app"


      - name: Upload Build artifact
        uses: actions/upload-artifact@v4
        with:
          # windows / linux / mac-arm / mac-intel
          name: tapas-${{ matrix.name }}-v${{ needs.prep.outputs.version }}
          # pick up the one archive that was created in this job
          path: dist/tapas_${{ needs.prep.outputs.version }}-*.*   # .zip or .tar.gz
          retention-days: 5

  release:
    name: Create GitHub Release & Attach Bundles
    needs: [prep, build]
    runs-on: ubuntu-latest
  
    steps:
      - name: Download Build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
  
      - name: Create or update GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prep.outputs.version }}
          name: v${{ needs.prep.outputs.version }}
          draft: false
          prerelease: false
          files: |
            release-artifacts/**/*.zip
            release-artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
